const regex =
`
\\b	一个单词边界。
\\B	非单词边界。
\\d	数字字符。等价于[0-9]。
\\D	非数字字符。等价于[^0-9]。
\\f	换页符。
\\n	换行符。
\\r	回车符。
\\s	任何空白字符，包括空格、制表符、换页符等等。等价于[\\f\\n\\r\\t\\v]。
\\S	任何非空白字符。等价于[^\\f\\n\\r\\t\\v]。
\\t	制表符。
\\v	垂直制表符。
\\w	包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。
\\W	非单词字符。等价于“[^A-Za-z0-9_]”。
^	字符串的开始位置。
$   字符串的结束位置。
*	匹配前面的子表达式零次或多次。*等价于{0,}。
+	匹配前面的子表达式一次或多次。+等价于{1,}。
?	匹配前面的子表达式零次或一次。?等价于{0,1}。
x|y	x或y。注意括号在这里的使用
[xyz]	字符集合。
[^xyz]	负值字符集合。
[a-z]	字符范围。
[^a-z]	负值字符范围。
\\	转义符号，特殊意义与原字符之间转义。

`

module.exports = regex;